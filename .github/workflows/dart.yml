name: Dart

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    # Note that this workflow uses the latest stable version of the Dart SDK.
    # Docker images for other release channels - like dev and beta - are also
    # available. See https://hub.docker.com/r/google/dart/ for the available
    # images.
    container:
      image:  google/dart:latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.1.4

      - name: Print Dart SDK version
        run: dart --version

      - name: Install dependencies
        run: dart pub get

      # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source
        run: dart analyze

      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
      - name: Run tests
        run: dart test
        
      - name: Install vulcanize
        run: npm install -g vulcanize
      - name: Build web
        run: dart tool/grind.dart build
#       - name: Build web
        
        
      - name: GH Pages deploy
  # You may pin to the exact commit or the version.
  # uses: Cecilapp/GitHub-Pages-deploy@f26df39a27b93cae2c6aac5e07fdc556e8770247
        uses: Cecilapp/GitHub-Pages-deploy@3.1.0
        with:
          # A verified email.
          email: penlipenkovladislav@gmail.com
          # Where static files are.
          build_dir: build
          # Which branch to push files.
          branch: gh-page
          # The custom domain name.

